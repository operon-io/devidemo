# yaml-language-server: $schema=https://raw.githubusercontent.com/apache/camel/main/dsl/camel-yaml-dsl/camel-yaml-dsl/src/generated/resources/schema/camel-yaml-dsl.json

#
# Set auto-startup to true (from resources/application.yml) if you want to run this example
#
- route:
    id: choice-example.route
    auto-startup: "{{example.eip.choice.enabled}}"
    from:
        uri: "timer://choice-example?repeatCount=1"
        steps:
        - log:
            message: "Choice-example"
        
        - set-body:
            constant: "Hello"
        
        - set-header:
            name: initialValue
            constant: empty
            
        - choice:
            when:
              #
              # when 1
              #
              - constant: "false"
                steps:
                - set-body:
                    constant: "when 1"
                - to:
                    uri: "direct:choice-example-handler"
              #
              # when 2
              #
              - language:
                  language: operon
                  expression: "Select: 100 = 200"
                steps:
                - set-body:
                    constant: "when 2"
                - to:
                    uri: "direct:choice-example-handler"
              #
              # when 3
              #
              - simple: "${body} != null"
                steps:
                - set-body:
                    constant: "when 3"
                - to:
                    uri: "direct:choice-example-handler"
              #
              # Other when-statements here...
              #
            otherwise:
              steps:
                - log: "Choice was false, so got here."
                - stop:
                    description: "Do not continue routing"
        
- route:
    id: choice-example-handler.route
    auto-startup: "{{example.eip.choice.enabled}}"
    from:
        uri: "direct:choice-example-handler"
        steps:
        - log:
            message: "Choice was true, therefore got into this handler. Body :: ${body}"
